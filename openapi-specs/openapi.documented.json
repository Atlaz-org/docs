{
  "openapi": "3.0.3",
  "info": {
    "title": "Atlaz API",
    "description": "OpenAPI compliant Atlaz API.",
    "version": "1.0.0"
  },
  "servers": [{ "url": "https://app.atlaz.org/api" }],
  "paths": {
    "/flows": {
      "get": {
        "operationId": "flows-all",
        "summary": "List flows",
        "description": "Returns a paginated list of flows.",
        "tags": ["flows"],
        "security": [{ "Authorization": [] }],
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "number", "default": 1 }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": { "type": "number", "default": 10 }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "siteId",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "streamId",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "operator",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "not": {} },
                { "type": "string", "enum": ["and", "or"] }
              ],
              "default": "and"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["INPUT", "OUTPUT"]
                          },
                          "utilityState": {
                            "type": "string",
                            "enum": [
                              "RESOURCES",
                              "RAW_MATERIALS",
                              "INTERMEDIATE_PRODUCTS",
                              "FINISHED_PRODUCTS",
                              "NEUTRALS",
                              "INACTIVE_NEUTRALS",
                              "ACTIVE_NEUTRALS",
                              "WASTE",
                              "PRODUCTION_WASTE",
                              "CONSUMPTION_WASTE",
                              "MIXED_WASTE"
                            ]
                          },
                          "hazards": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "ASPIRATION_TOXICITY",
                                "CARCINOGENICITY",
                                "CORROSIVENESS",
                                "EXPLOSIVENESS",
                                "FLAMMABILITY",
                                "INFECTIVITY",
                                "IRRITABILITY",
                                "MUTAGENESIS",
                                "OXIDIZING",
                                "RADIOACTIVITY",
                                "REPRODUCTIVE_TOXICITY",
                                "SENSITIZING"
                              ]
                            }
                          },
                          "terminationStandard": {
                            "type": "string",
                            "enum": ["TERMINATION_STANDARD_1"],
                            "nullable": true
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[cC][^\\s-]{8,}$"
                          },
                          "description": { "type": "string", "nullable": true },
                          "weight": { "type": "integer" },
                          "units": { "type": "integer", "nullable": true },
                          "productId": { "type": "string", "nullable": true },
                          "complexity": { "type": "number", "nullable": true },
                          "geoTagId": { "type": "string", "nullable": true },
                          "when": { "type": "string", "format": "date-time" },
                          "siteId": { "type": "string", "nullable": true },
                          "streamId": { "type": "string", "nullable": true },
                          "teamId": { "type": "string" },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "_count": {
                            "type": "object",
                            "properties": { "items": { "type": "number" } },
                            "required": ["items"],
                            "additionalProperties": false
                          },
                          "documents": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string" },
                                "name": { "type": "string" },
                                "type": { "type": "string" },
                                "url": { "type": "string" }
                              },
                              "required": ["id", "name", "type", "url"],
                              "additionalProperties": false
                            }
                          },
                          "stream": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "pattern": "^[cC][^\\s-]{8,}$"
                              },
                              "name": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 50
                              }
                            },
                            "required": ["id", "name"],
                            "additionalProperties": false,
                            "nullable": true
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "pattern": "^[cC][^\\s-]{8,}$"
                                },
                                "materialId": { "type": "string" },
                                "name": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 50
                                },
                                "weight": { "type": "integer" }
                              },
                              "required": [
                                "id",
                                "materialId",
                                "name",
                                "weight"
                              ],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": [
                          "type",
                          "utilityState",
                          "hazards",
                          "terminationStandard",
                          "id",
                          "description",
                          "weight",
                          "units",
                          "productId",
                          "complexity",
                          "geoTagId",
                          "when",
                          "siteId",
                          "streamId",
                          "teamId",
                          "createdAt",
                          "updatedAt",
                          "_count",
                          "documents",
                          "items"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "total": { "type": "number" },
                    "pageCount": { "type": "number" }
                  },
                  "required": ["data", "total", "pageCount"],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": { "$ref": "#/components/responses/error" }
        },
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "source": "import Atlaz from '@atlaz/sdk';\n\nconst atlaz = new Atlaz();\n\nasync function main() {\n  const flowListResponse = await atlaz.flows.list({ teamId: 'string' });\n\n  console.log(flowListResponse.data);\n}\n\nmain();"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": { "type": "http", "scheme": "bearer" }
    },
    "responses": {
      "error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "code": { "type": "string" },
                "issues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": { "message": { "type": "string" } },
                    "required": ["message"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["message", "code"],
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "tags": [{ "name": "flows" }]
}
